//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.2 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.10.22 at 07:44:10 PM CEST 
//


package com.java.xsd.jaxb;

import java.util.ArrayList;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for Type.DABAG.Aenderungsvormerkung complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Type.DABAG.Aenderungsvormerkung"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="gegenstand" type="{urn:xoev-de:kosit:xoev:datentyp:din-spec-91379_2019-03}datatypeC" minOccurs="0"/&gt;
 *         &lt;element name="berechtigter" type="{http://www.xjustiz.de}Type.GDS.Ref.Rollennummer" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="dinglichBerechtigter" type="{http://www.xjustiz.de}Type.DABAG.DinglichBerechtigter" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="eintragungsgrundlage" type="{http://www.xjustiz.de}Type.DABAG.Ref.Eintragungsgrundlage" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Type.DABAG.Aenderungsvormerkung", propOrder = {
    "gegenstand",
    "berechtigter",
    "dinglichBerechtigter",
    "eintragungsgrundlage"
})
public class TypeDABAGAenderungsvormerkung {

    protected String gegenstand;
    protected List<TypeGDSRefRollennummer> berechtigter;
    protected List<TypeDABAGDinglichBerechtigter> dinglichBerechtigter;
    protected List<TypeDABAGRefEintragungsgrundlage> eintragungsgrundlage;

    /**
     * Gets the value of the gegenstand property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getGegenstand() {
        return gegenstand;
    }

    /**
     * Sets the value of the gegenstand property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setGegenstand(String value) {
        this.gegenstand = value;
    }

    /**
     * Gets the value of the berechtigter property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a <CODE>set</CODE> method for the berechtigter property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getBerechtigter().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TypeGDSRefRollennummer }
     * 
     * 
     */
    public List<TypeGDSRefRollennummer> getBerechtigter() {
        if (berechtigter == null) {
            berechtigter = new ArrayList<TypeGDSRefRollennummer>();
        }
        return this.berechtigter;
    }

    /**
     * Gets the value of the dinglichBerechtigter property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a <CODE>set</CODE> method for the dinglichBerechtigter property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDinglichBerechtigter().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TypeDABAGDinglichBerechtigter }
     * 
     * 
     */
    public List<TypeDABAGDinglichBerechtigter> getDinglichBerechtigter() {
        if (dinglichBerechtigter == null) {
            dinglichBerechtigter = new ArrayList<TypeDABAGDinglichBerechtigter>();
        }
        return this.dinglichBerechtigter;
    }

    /**
     * Gets the value of the eintragungsgrundlage property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a <CODE>set</CODE> method for the eintragungsgrundlage property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getEintragungsgrundlage().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TypeDABAGRefEintragungsgrundlage }
     * 
     * 
     */
    public List<TypeDABAGRefEintragungsgrundlage> getEintragungsgrundlage() {
        if (eintragungsgrundlage == null) {
            eintragungsgrundlage = new ArrayList<TypeDABAGRefEintragungsgrundlage>();
        }
        return this.eintragungsgrundlage;
    }

}
